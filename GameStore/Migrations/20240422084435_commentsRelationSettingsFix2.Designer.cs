// <auto-generated />
using System;
using GameStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStore.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240422084435_commentsRelationSettingsFix2")]
    partial class commentsRelationSettingsFix2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameStore.Models.Comments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID1")
                        .HasColumnType("int");

                    b.Property<int>("communityID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID1");

                    b.HasIndex("communityID");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("GameStore.Models.Community", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("gameID")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("gameID");

                    b.HasIndex("userID");

                    b.ToTable("Community", (string)null);
                });

            modelBuilder.Entity("GameStore.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isFeatured")
                        .HasColumnType("bit");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Game", (string)null);
                });

            modelBuilder.Entity("GameStore.Models.Library", b =>
                {
                    b.Property<int>("gameID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("gameID", "userID");

                    b.HasIndex("userID");

                    b.ToTable("Library", (string)null);
                });

            modelBuilder.Entity("GameStore.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("funds")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("GameStore.Models.Comments", b =>
                {
                    b.HasOne("GameStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID1");

                    b.HasOne("GameStore.Models.Community", "community")
                        .WithMany("comments")
                        .HasForeignKey("communityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("community");
                });

            modelBuilder.Entity("GameStore.Models.Community", b =>
                {
                    b.HasOne("GameStore.Models.Game", "game")
                        .WithMany()
                        .HasForeignKey("gameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("game");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GameStore.Models.Library", b =>
                {
                    b.HasOne("GameStore.Models.Game", "game")
                        .WithMany()
                        .HasForeignKey("gameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Models.User", null)
                        .WithMany("Library")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("game");
                });

            modelBuilder.Entity("GameStore.Models.User", b =>
                {
                    b.HasOne("GameStore.Models.User", null)
                        .WithMany("Friends")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("GameStore.Models.Community", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("GameStore.Models.User", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("Library");
                });
#pragma warning restore 612, 618
        }
    }
}
